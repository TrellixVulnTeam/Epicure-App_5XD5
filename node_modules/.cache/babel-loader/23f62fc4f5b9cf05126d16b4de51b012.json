{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchDishes = createAsyncThunk(\"dishes/fetchDishes\", async () => {\n  const response = await axios.get(\"http://localhost:8080/dishes\");\n  return response.data;\n});\nconst dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    dishes: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {\n      state.sayHi = \"\";\n    }\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchDishes.pending, (state, action) => {\n      console.log(\"loading dishes fetch\");\n      state.isLoading = true;\n    }).addCase(fetchDishes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.dishes = action.payload.result;\n    }).addCase(fetchDishes.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error.message);\n    });\n  }\n\n});\nexport const dishesActions = dishesSlice.actions;\nexport default dishesSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/dishDataSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchDishes","response","get","data","dishesSlice","name","initialState","dishes","isLoading","reducers","toggle","state","sayHi","extraReducers","builder","addCase","pending","action","console","log","fulfilled","payload","result","rejected","error","message","dishesActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAD,EAAuB,YAAY;AAC5E,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,8BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAH0C,CAApC;AAKP,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFgB;AAM9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACD;;AAHO,GANoB;;AAW9BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWf,WAAW,CAACgB,OADvB,EACgC,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAR,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAJH,EAKGO,OALH,CAKWf,WAAW,CAACoB,SALvB,EAKkC,CAACT,KAAD,EAAQM,MAAR,KAAmB;AACjDN,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,MAAN,GAAcU,MAAM,CAACI,OAAP,CAAeC,MAA7B;AACD,KARH,EASGP,OATH,CASWf,WAAW,CAACuB,QATvB,EASiC,CAACZ,KAAD,EAAQM,MAAR,KAAmB;AAChDN,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACO,KAAP,CAAaC,OAAzB;AACD,KAZH;AAaD;;AAzB6B,CAAD,CAA/B;AA4BA,OAAO,MAAMC,aAAa,GAAGtB,WAAW,CAACuB,OAAlC;AAEP,eAAevB,WAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchDishes = createAsyncThunk(\"dishes/fetchDishes\", async () => {\n  const response = await axios.get(\"http://localhost:8080/dishes\");\n  return response.data;\n});\n\nconst dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    dishes: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n      state.sayHi = \"\";\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchDishes.pending, (state, action) => {\n        console.log(\"loading dishes fetch\");\n        state.isLoading = true;\n      })\n      .addCase(fetchDishes.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.dishes= action.payload.result;\n      })\n      .addCase(fetchDishes.rejected, (state, action) => {\n        state.isLoading = false;\n        console.log(action.error.message);\n      });\n  },\n});\n\nexport const dishesActions = dishesSlice.actions;\n\nexport default dishesSlice;\n\n\n"]},"metadata":{},"sourceType":"module"}