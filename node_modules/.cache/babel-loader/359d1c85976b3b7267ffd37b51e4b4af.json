{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchChefs = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n  const response = await axios.get(\"http://localhost:8080/chefs\");\n  return response.data;\n});\nconst chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    chefs: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {\n      state.sayHi = \"\";\n    }\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchChefs.pending, (state, action) => {\n      console.log(\"loading chefs fetch\");\n      state.isLoading = true;\n    }).addCase(fetchChefs.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.chefs = action.payload.result;\n    }).addCase(fetchChefs.rejected, (state, action) => {\n      state.isLoading = false;\n      console.log(action.error.message);\n    });\n  }\n\n});\nexport const chefsActions = chefsSlice.actions;\nexport default chefsSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/chefDataSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchChefs","response","get","data","chefsSlice","name","initialState","chefs","isLoading","reducers","toggle","state","sayHi","extraReducers","builder","addCase","pending","action","console","log","fulfilled","payload","result","rejected","error","message","chefsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACzE,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,6BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHyC,CAAnC;AAKP,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFe;AAM7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACD;;AAHO,GANmB;;AAW7BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWf,UAAU,CAACgB,OADtB,EAC+B,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAR,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAJH,EAKGO,OALH,CAKWf,UAAU,CAACoB,SALtB,EAKiC,CAACT,KAAD,EAAQM,MAAR,KAAmB;AAChDN,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAaU,MAAM,CAACI,OAAP,CAAeC,MAA5B;AACD,KARH,EASGP,OATH,CASWf,UAAU,CAACuB,QATtB,EASgC,CAACZ,KAAD,EAAQM,MAAR,KAAmB;AAC/CN,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACO,KAAP,CAAaC,OAAzB;AACD,KAZH;AAaD;;AAzB4B,CAAD,CAA9B;AA4BA,OAAO,MAAMC,YAAY,GAAGtB,UAAU,CAACuB,OAAhC;AAEP,eAAevB,UAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchChefs = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n  const response = await axios.get(\"http://localhost:8080/chefs\");\n  return response.data;\n});\n\nconst chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    chefs: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n      state.sayHi = \"\";\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchChefs.pending, (state, action) => {\n        console.log(\"loading chefs fetch\");\n        state.isLoading = true;\n      })\n      .addCase(fetchChefs.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.chefs= action.payload.result;        \n      })\n      .addCase(fetchChefs.rejected, (state, action) => {\n        state.isLoading = false;\n        console.log(action.error.message);\n      });\n  },\n});\n\nexport const chefsActions = chefsSlice.actions;\n\nexport default chefsSlice;\n\n\n"]},"metadata":{},"sourceType":"module"}