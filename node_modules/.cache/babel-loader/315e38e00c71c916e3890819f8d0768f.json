{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"; // slices\n// import chefsSlice from \"./chefs-slice\";\n// import restaurantsSlice from \"./restaurants-slice\";\n// import dishesSlice from \"./dishes-slice\";\n// import searchSlice from \"./search-slice\";\n\nconst store = configureStore({\n  reducer: {\n    chefs: chefsSlice.reducer,\n    restaurants: restaurantsSlice.reducer,\n    dishes: dishesSlice.reducer,\n    search: searchSlice.reducer\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport default store; // import { createStore } from \"redux\";\n// const initailState = {\n//   data: \"\",\n// };\n// const rootReducer = (state = initailState, action) => {\n//   switch (action.type) {\n//     case \"ADD_RESTAURANT_DATA\":\n//       return {\n//         ...state,\n//         data: action.payload,\n//       };\n//     case \"ADD_DISH_DATA\":\n//       return {\n//         ...state,\n//         data: action.payload,\n//       };\n//       case \"ADD_CHEF_DATA\":\n//         return {\n//           ...state,\n//           data: action.payload,\n//         };  \n//     default:\n//       return state;\n//   }\n// };\n// export default createStore(rootReducer);","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/store.js"],"names":["configureStore","TypedUseSelectorHook","useDispatch","useSelector","store","reducer","chefs","chefsSlice","restaurants","restaurantsSlice","dishes","dishesSlice","search","searchSlice","useAppDispatch","useAppSelector"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,oBAAT,EAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEC,UAAU,CAACF,OADX;AAEPG,IAAAA,WAAW,EAAEC,gBAAgB,CAACJ,OAFvB;AAGPK,IAAAA,MAAM,EAAEC,WAAW,CAACN,OAHb;AAIPO,IAAAA,MAAM,EAAEC,WAAW,CAACR;AAJb;AADkB,CAAD,CAA5B;AAUA,OAAO,MAAMS,cAAc,GAAG;AAAA;;AAAA,SAAMZ,WAAW,EAAjB;AAAA,CAAvB;;GAAMY,c;UAAuBZ,W;;;AACpC,OAAO,MAAMa,cAAc,GAAGZ,WAAvB;AAEP,eAAeC,KAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\n// slices\n// import chefsSlice from \"./chefs-slice\";\n// import restaurantsSlice from \"./restaurants-slice\";\n// import dishesSlice from \"./dishes-slice\";\n// import searchSlice from \"./search-slice\";\n\nconst store = configureStore({\n  reducer: {\n    chefs: chefsSlice.reducer,\n    restaurants: restaurantsSlice.reducer,\n    dishes: dishesSlice.reducer,\n    search: searchSlice.reducer,\n  },\n});\n\n\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n\nexport default store;\n\n// import { createStore } from \"redux\";\n\n// const initailState = {\n//   data: \"\",\n// };\n\n// const rootReducer = (state = initailState, action) => {\n//   switch (action.type) {\n//     case \"ADD_RESTAURANT_DATA\":\n//       return {\n//         ...state,\n//         data: action.payload,\n//       };\n//     case \"ADD_DISH_DATA\":\n//       return {\n//         ...state,\n//         data: action.payload,\n//       };\n//       case \"ADD_CHEF_DATA\":\n//         return {\n//           ...state,\n//           data: action.payload,\n//         };  \n//     default:\n//       return state;\n//   }\n// };\n\n// export default createStore(rootReducer);"]},"metadata":{},"sourceType":"module"}