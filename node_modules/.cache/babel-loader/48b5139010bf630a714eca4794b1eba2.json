{"ast":null,"code":"import _slicedToArray from\"/Users/yardentsaraf/Desktop/EpicureApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import clock from\"../../../assets/clock-icon.svg\";import DishSmallCard from\"../../layout/card/DishSmallCard\";import\"./RestaurantPage.scss\";import DishPage from\"../dishPage/DishPage\";import{useParams}from\"react-router-dom\";import Footer from\"../../footer/Footer\";import Header from\"../../header/Header\";import{useSelector}from\"react-redux\";import{useAppDispatch}from\"../../../store/store\";import{useEffect,Fragment,useState}from\"react\";import{fetchRestaurants}from\"../../../store/RestaurantDataSlice\";import{fetchDishes}from\"../../../store/dishDataSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RestaurantPage=function RestaurantPage(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openDishCard=_useState2[0],setOpenDishCard=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),dishName=_useState4[0],setDishName=_useState4[1];var dispatch=useAppDispatch();var _useSelector=useSelector(function(state){return state.restaurants;}),restaurants=_useSelector.restaurants;var _useSelector2=useSelector(function(state){return state.dishes;}),dishes=_useSelector2.dishes;useEffect(function(){dispatch(fetchRestaurants());dispatch(fetchDishes());},[]);var openDishCardHandler=function openDishCardHandler(dish){setOpenDishCard(true);setDishName(dish);};var params=useParams();var restaurantDetails=restaurants.filter(function(item){return item.name===params.restaurantName;});var restaurantDishes=dishes.filter(function(item){return item.restaurant===params.restaurantName;});var mealsTypes=[\"Breakfast\",\"Lunch\",\"Dinner\"];var opening=restaurantDetails[0].openingHour.split(\":\")[0]*1;var closing=restaurantDetails[0].closingHour.split(\":\")[0]*1;var now=new Date().getHours();var ifOpen=now>=opening&&now<=closing;return/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-page\",children:[/*#__PURE__*/_jsx(Header,{}),openDishCard&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"dish-container\",onClick:function onClick(){return setOpenDishCard(false);}}),\" \",/*#__PURE__*/_jsx(\"button\",{className:\"close-dish-page\",onClick:function onClick(){return setOpenDishCard(false);},children:\"X\"}),\" \",/*#__PURE__*/_jsx(DishPage,{dish:dishName})]}),!openDishCard&&/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-page-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:restaurantDetails[0].desktopImage,alt:\"restaurant\",className:\"restaurant-page-img\",srcSet:\"\".concat(restaurantDetails[0].bigImage,\" 800w\")}),/*#__PURE__*/_jsx(\"h1\",{children:params.restaurantName}),/*#__PURE__*/_jsx(\"h2\",{children:restaurantDetails[0].chef}),ifOpen&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:clock,alt:\"clock\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:\"Open now\"})]}),/*#__PURE__*/_jsx(\"nav\",{className:\"categories-div\",children:mealsTypes.map(function(type){return/*#__PURE__*/_jsx(\"a\",{href:\"#\".concat(type),className:\"type-meal-link\",children:type});})}),/*#__PURE__*/_jsx(\"div\",{className:\"meal-by-type\",children:mealsTypes.map(function(type){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"type-container\",id:type,children:[/*#__PURE__*/_jsx(\"h2\",{children:type}),/*#__PURE__*/_jsx(\"div\",{className:\"type-line\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"restaurants-container\",children:restaurantDishes.map(function(dish){if(dish.dishType===mealsTypes[0])return/*#__PURE__*/_jsx(\"button\",{className:\"to-dish-btn\",onClick:function onClick(){return openDishCardHandler(dish.name);},children:/*#__PURE__*/_jsx(\"div\",{className:\"restaurant-item\",children:/*#__PURE__*/_jsx(DishSmallCard,{img:dish.mobileImage,signatureDesktopImage:dish.desktopImage,title:dish.name,detail:dish.description,price:dish.price},dish.key)})});})})]});})}),/*#__PURE__*/_jsx(Footer,{})]})]});};export default RestaurantPage;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/restaurantPage/RestaurantPage.tsx"],"names":["clock","DishSmallCard","DishPage","useParams","Footer","Header","useSelector","useAppDispatch","useEffect","Fragment","useState","fetchRestaurants","fetchDishes","RestaurantPage","openDishCard","setOpenDishCard","dishName","setDishName","dispatch","state","restaurants","dishes","openDishCardHandler","dish","params","restaurantDetails","filter","item","name","restaurantName","restaurantDishes","restaurant","mealsTypes","opening","openingHour","split","closing","closingHour","now","Date","getHours","ifOpen","desktopImage","bigImage","chef","map","type","dishType","mobileImage","description","price","key"],"mappings":"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","sourcesContent":["import clock from \"../../../assets/clock-icon.svg\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\n\nconst RestaurantPage = () => {\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { dishes } = useSelector((state: any) => state.dishes);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchDishes());\n  },[]);\n\n  const openDishCardHandler = (dish: string) => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params: any = useParams();\n\n  const restaurantDetails = restaurants.filter(\n    (item: any) => item.name === params.restaurantName\n  );\n\n  const restaurantDishes = dishes.filter(\n    (item: any) => item.restaurant === params.restaurantName\n  );\n\n  const mealsTypes: string[] = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\n  const opening = restaurantDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = restaurantDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen: boolean = now >= opening && now <= closing;\n  return (\n    <div className=\"restaurant-page\">\n      <Header />\n      {openDishCard && (\n        <Fragment>\n          <button\n            className=\"dish-container\"\n            onClick={() => setOpenDishCard(false)}\n          ></button>{\" \"}\n          <button\n            className=\"close-dish-page\"\n            onClick={() => setOpenDishCard(false)}\n          >\n            X\n          </button>{\" \"}\n          <DishPage dish={dishName}></DishPage>\n        </Fragment>\n      )}\n      {!openDishCard && (\n        <div className=\"restaurant-page-container\">\n          <img\n            src={restaurantDetails[0].desktopImage}\n            alt=\"restaurant\"\n            className=\"restaurant-page-img\"\n            srcSet={`${restaurantDetails[0].bigImage} 800w`}\n          ></img>\n          <h1>{params.restaurantName}</h1>\n          <h2>{restaurantDetails[0].chef}</h2>\n          {ifOpen && (\n            <div>\n              <img src={clock} alt=\"clock\"></img> <span>Open now</span>\n            </div>\n          )}\n          <nav className=\"categories-div\">\n            {mealsTypes.map((type) => (\n              <a href={`#${type}`} className=\"type-meal-link\">\n                {type}\n              </a>\n            ))}\n          </nav>\n          <div className=\"meal-by-type\">\n            {mealsTypes.map((type) => {\n              return (\n                <Fragment>\n                  <div className=\"type-container\" id={type}>\n                    <h2>{type}</h2>\n                    <div className=\"type-line\"></div>\n                  </div>\n                  <div className=\"restaurants-container\">\n                    {restaurantDishes.map((dish: any) => {\n                      if (dish.dishType === mealsTypes[0])\n                        return (\n                          <button\n                            className=\"to-dish-btn\"\n                            onClick={() => openDishCardHandler(dish.name)}\n                          >\n                            <div className=\"restaurant-item\">\n                              <DishSmallCard\n                                img={dish.mobileImage}\n                                signatureDesktopImage={dish.desktopImage}\n                                title={dish.name}\n                                detail={dish.description}\n                                price={dish.price}\n                                key={dish.key}\n                              ></DishSmallCard>\n                            </div>\n                          </button>\n                        );\n                    })}\n                  </div>\n                </Fragment>\n              );\n            })}\n          </div>\n          <Footer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}